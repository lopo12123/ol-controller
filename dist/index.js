import{create_tile_map__xyz as e,create_point_layer as t,create_point_cluster_layer as a,create_polygon_layer__GeoJson as s,create_polygon_layer__PathArray as r,create_polyline_layer as o}from"./core.js";import{AnimationController as l}from"./animation.js";import{PopupController as i}from"./popup.js";import{Select as n}from"ol/interaction";import{getTopRight as h}from"ol/extent";import"ol/ol.css";import"ol";import"ol/layer/Tile";import"ol/source";import"ol/layer/Vector";import"ol/source/Vector";import"ol/format";import"ol/style";import"ol/geom";import"ol/proj";import"ol/style/Circle";import"ol/layer/Image";import"ol/render";class p{#e;get dom(){return this.#e}#t=null;get map(){return this.#t}get instantiated(){return null!==this.#t}enable_select_listener(){const e=new n;e.on("select",(e=>{const t=e.target?.getFeatures()?.getArray()?.[0];if(t){const e=h(t.getGeometry().getExtent());t.features&&1===t.features.length?t.features[0].getProperties()._click_callback?.(e):t.getProperties()._click_callback?.(e)}e.target?.getFeatures()?.clear()})),this.#t?.addInteraction(e)}constructor(t,a){this.#e=t,this.#t=e(t,a),this.enable_select_listener()}render(t,a){null!==this.#t&&(console.warn('[OlController] There is a map instance on the target dom, calling the method "render" will overwrite the old map instance. If that`s what you`re doing, ignore this warning.'),this.dispose()),this.#e=t,this.#t=e(t,a),this.enable_select_listener()}zoom(e){const t=this.#t?.getView(),a=t?.getZoom();t&&a&&("-"===e?t.setZoom(a-1):"+"===e?t.setZoom(a+1):t.setZoom(e))}getZoomLevel(){return this.#t?.getView().getZoom()??null}searchInLayer(e,t){const a=this.#a.get(e);if(a){const e=a.getSource().getFeatures();for(let a=0;a<e.length;a++){const s=e[a].getProperties().self;if(t(s))return s.ext??null}}return null}toggle_visible(e,t){const a=this.#a.get(e);a&&a.setVisible(t??!a.getVisible())}#a=new Map;get layers(){return[...this.#a.keys()]}getLayer(e){return this.#a.get(e)}addPointLayer(e,a,s,r,o=1){if(this.#t){this.#a.has(e)&&console.warn(`[OlController] A layer named "${e}" already exists, the old layer will be replaced by the new layer. If that's what you're doing, ignore this warning.`);const l=t(a,s,r,o);this.#a.set(e,l),this.#t.addLayer(l)}else console.warn("[OlController] The map instance has already disposed.")}addPointClusterLayer(e,t,s,r,o,l,i,n=1){if(this.#t){this.#a.has(e)&&console.warn(`[OlController] A layer named "${e}" already exists, the old layer will be replaced by the new layer. If that's what you're doing, ignore this warning.`);const h=a(t,s,r,o,l,i,n);this.#a.set(e,h),this.#t.addLayer(h)}else console.warn("[OlController] The map instance has already disposed.")}addPolygonLayer(e,t,a,o,l=1){if(this.#t)if(this.#a.has(e)&&console.warn(`[OlController] A layer named "${e}" already exists, the old layer will be replaced by the new layer. If that's what you're doing, ignore this warning.`),"string"==typeof t){const r=s(t,a);this.#a.set(e,r),this.#t.addLayer(r)}else{const s=r(t,a,o);this.#a.set(e,s),this.#t.addLayer(s)}else console.warn("[OlController] The map instance has already disposed.")}addPolylineLayer(e,t,a,s){if(this.#t){this.#a.has(e)&&console.warn(`[OlController] A layer named "${e}" already exists, the old layer will be replaced by the new layer. If that's what you're doing, ignore this warning.`);const r=o(t,a,s);this.#a.set(e,r),this.#t.addLayer(r)}else console.warn("[OlController] The map instance has already disposed.")}removeLayer(e){void 0===e?(this.#a.forEach((e=>{e.dispose()})),this.#a.clear()):(this.#a.get(e)?.dispose(),this.#a.delete(e))}#s=new Map;get animationLayers(){return[...this.#s.keys()]}addAnimation(e,t,a,s=1e5,r,o){if(this.#t){this.#s.has(e)&&console.warn(`[OlController] A layer named "${e}" already exists, the old layer will be replaced by the new layer. If that's what you're doing, ignore this warning.`);const i=new l(this.#t,t,a,s,r,o);this.#s.set(e,i)}else console.warn("[OlController] The map instance has already disposed.")}getAnimation(e){return this.#s.get(e)??null}removeAnimation(e){void 0===e?(this.#s.forEach((e=>{e.dispose()})),this.#s.clear()):(this.#s.get(e)?.dispose(),this.#s.delete(e))}#r=new Map;get popupOverlays(){return[...this.#r.keys()]}addPopup(e,t,a,s){if(this.#t){this.#r.has(e)&&console.warn(`[OlController] A layer named "${e}" already exists, the old layer will be replaced by the new layer. If that's what you're doing, ignore this warning.`);const r=new i(t,this.#t,a,s);this.#r.set(e,r)}else console.warn("[OlController] The map instance has already disposed.")}getPopup(e){return this.#r.get(e)??null}removePopup(e){void 0===e?(this.#r.forEach((e=>{e.dispose()})),this.#r.clear()):(this.#r.get(e)?.dispose(),this.#r.delete(e))}animateTo(e,t=1500){this.#t?.getView().animate({center:e,duration:t})}cleanUp(){this.removeLayer(),this.removeAnimation()}dispose(){this.cleanUp(),this.#t?.dispose(),this.#t=null,this.#e=null}}export{p as OlController};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VzIjpbIi4uL2xpYi9pbmRleC50cyJdLCJzb3VyY2VzQ29udGVudCI6W251bGxdLCJuYW1lcyI6WyJPbENvbnRyb2xsZXIiLCJkb20iLCJ0aGlzIiwibWFwIiwiaW5zdGFudGlhdGVkIiwiZW5hYmxlX3NlbGVjdF9saXN0ZW5lciIsInNpbmdsZUNsaWNrIiwiU2VsZWN0Iiwib24iLCJldiIsIml0ZW0iLCJ0YXJnZXQiLCJnZXRGZWF0dXJlcyIsImdldEFycmF5IiwiY29vcmRpbmF0ZSIsImdldFRvcFJpZ2h0IiwiZ2V0R2VvbWV0cnkiLCJnZXRFeHRlbnQiLCJmZWF0dXJlcyIsImxlbmd0aCIsImdldFByb3BlcnRpZXMiLCJfY2xpY2tfY2FsbGJhY2siLCJjbGVhciIsImFkZEludGVyYWN0aW9uIiwiY29uc3RydWN0b3IiLCJlbCIsImluaXRPcHRpb25zIiwiY3JlYXRlX3RpbGVfbWFwX194eXoiLCJyZW5kZXIiLCJjb25zb2xlIiwid2FybiIsImRpc3Bvc2UiLCJ6b29tIiwidG8iLCJ2aWV3IiwiZ2V0VmlldyIsImN1cnJfbGV2ZWwiLCJnZXRab29tIiwic2V0Wm9vbSIsImdldFpvb21MZXZlbCIsInNlYXJjaEluTGF5ZXIiLCJsYXllck5hbWUiLCJjb25kaXRpb24iLCJsYXllciIsImxheWVycyIsImdldCIsImdldFNvdXJjZSIsImkiLCJzZWxmIiwiZXh0IiwidG9nZ2xlX3Zpc2libGUiLCJ0YXJnZXRfbGF5ZXIiLCJzZXRWaXNpYmxlIiwiZ2V0VmlzaWJsZSIsIk1hcCIsImtleXMiLCJnZXRMYXllciIsImFkZFBvaW50TGF5ZXIiLCJwb2ludHMiLCJpY29uIiwiY2xpY2tDQiIsInoiLCJoYXMiLCJsYXllcl9wb2ludCIsImNyZWF0ZV9wb2ludF9sYXllciIsInNldCIsImFkZExheWVyIiwiYWRkUG9pbnRDbHVzdGVyTGF5ZXIiLCJkaXN0YW5jZSIsIm1pbkRpc3RhbmNlIiwiY2x1c3RlclN0eWxlIiwibGF5ZXJfcG9pbnRfY2x1c3RlciIsImNyZWF0ZV9wb2ludF9jbHVzdGVyX2xheWVyIiwiYWRkUG9seWdvbkxheWVyIiwicG9seWdvbnMiLCJzdHlsZSIsImxheWVyX2pzb24iLCJjcmVhdGVfcG9seWdvbl9sYXllcl9fR2VvSnNvbiIsImxheWVyX3BhdGgiLCJjcmVhdGVfcG9seWdvbl9sYXllcl9fUGF0aEFycmF5IiwiYWRkUG9seWxpbmVMYXllciIsInBvbHlsaW5lcyIsImxheWVyX3BvbHlsaW5lIiwiY3JlYXRlX3BvbHlsaW5lX2xheWVyIiwicmVtb3ZlTGF5ZXIiLCJ1bmRlZmluZWQiLCJmb3JFYWNoIiwidmVjTGF5ZXIiLCJkZWxldGUiLCJhbmltYXRpb25MYXllcnMiLCJhZGRBbmltYXRpb24iLCJwYXRoIiwiaWNvbnMiLCJkdXJhdGlvbiIsInBlcmNlbnRVcGRhdGVDQiIsImFuaW1hdGlvbl9jb250cm9sbGVyIiwiQW5pbWF0aW9uQ29udHJvbGxlciIsImdldEFuaW1hdGlvbiIsInJlbW92ZUFuaW1hdGlvbiIsImNvbnRyb2xsZXIiLCJwb3B1cE92ZXJsYXlzIiwiYWRkUG9wdXAiLCJhbmNob3IiLCJvZmZzZXQiLCJwb3B1cF9jb250cm9sbGVyIiwiUG9wdXBDb250cm9sbGVyIiwiZ2V0UG9wdXAiLCJyZW1vdmVQb3B1cCIsImFuaW1hdGVUbyIsImNlbnRlciIsImFuaW1hdGUiLCJjbGVhblVwIl0sIm1hcHBpbmdzIjoid25CQXNCQSxNQUFNQSxFQUtGQyxHQUlJQSxVQUNBLE9BQU9DLE1BQUtELEVBTWhCRSxHQUFxQixLQUlqQkEsVUFDQSxPQUFPRCxNQUFLQyxFQU1aQyxtQkFDQSxPQUFxQixPQUFkRixNQUFLQyxFQU9SRSx5QkFDSixNQUFNQyxFQUFjLElBQUlDLEVBQ3hCRCxFQUFZRSxHQUFHLFVBQVdDLElBQ3RCLE1BQU1DLEVBQU9ELEVBQUdFLFFBQVFDLGVBQWVDLGFBQWEsR0FDcEQsR0FBS0gsRUFBTSxDQUNQLE1BQU1JLEVBQWFDLEVBQVlMLEVBQUtNLGNBQWNDLGFBRzdDUCxFQUFLUSxVQUFxQyxJQUF6QlIsRUFBS1EsU0FBU0MsT0FDaENULEVBQUtRLFNBQVMsR0FBR0UsZ0JBQWdCQyxrQkFBa0JQLEdBSW5ESixFQUFLVSxnQkFBZ0JDLGtCQUFrQlAsR0FJL0NMLEVBQUdFLFFBQVFDLGVBQWVVLFdBRTlCcEIsTUFBS0MsR0FBTW9CLGVBQWVqQixHQVE5QmtCLFlBQ0lDLEVBQ0FDLEdBQ0F4QixNQUFLRCxFQUFPd0IsRUFDWnZCLE1BQUtDLEVBQU93QixFQUFxQkYsRUFBSUMsR0FDckN4QixLQUFLRyx5QkFRVHVCLE9BQ0lILEVBQ0FDLEdBQ2lCLE9BQWR4QixNQUFLQyxJQUNKMEIsUUFBUUMsS0FBSyxnTEFDYjVCLEtBQUs2QixXQUVUN0IsTUFBS0QsRUFBT3dCLEVBQ1p2QixNQUFLQyxFQUFPd0IsRUFBcUJGLEVBQUlDLEdBQ3JDeEIsS0FBS0cseUJBVVQyQixLQUFLQyxHQUNELE1BQU1DLEVBQU9oQyxNQUFLQyxHQUFNZ0MsVUFDbEJDLEVBQWFGLEdBQU1HLFVBRXJCSCxHQUFTRSxJQUNFLE1BQVBILEVBQ0pDLEVBQUtJLFFBQVFGLEVBQWEsR0FFZixNQUFQSCxFQUNKQyxFQUFLSSxRQUFRRixFQUFhLEdBRzFCRixFQUFLSSxRQUFRTCxJQU9yQk0sZUFDSSxPQUFPckMsTUFBS0MsR0FBTWdDLFVBQVVFLFdBQWEsS0FXdENHLGNBQThCQyxFQUFtQkMsR0FDcEQsTUFBTUMsRUFBUXpDLE1BQUswQyxFQUFRQyxJQUFJSixHQUUvQixHQUFLRSxFQUFPLENBQ1IsTUFBTXpCLEVBQXNCeUIsRUFBTUcsWUFBWWxDLGNBQzlDLElBQUssSUFBSW1DLEVBQUksRUFBR0EsRUFBSTdCLEVBQVNDLE9BQVE0QixJQUFLLENBQ3RDLE1BQU1DLEVBQTZDOUIsRUFBUzZCLEdBQUczQixnQkFBZ0I0QixLQUMvRSxHQUFHTixFQUFVTSxHQUFPLE9BQU9BLEVBQUtDLEtBQU8sTUFJL0MsT0FBTyxLQVdKQyxlQUFlVCxFQUFtQlIsR0FDckMsTUFBTWtCLEVBQWVqRCxNQUFLMEMsRUFBUUMsSUFBSUosR0FFakNVLEdBQ0RBLEVBQWFDLFdBQVduQixJQUFPa0IsRUFBYUUsY0FVcERULEdBQVUsSUFBSVUsSUFJVlYsYUFDQSxNQUFPLElBQUsxQyxNQUFLMEMsRUFBUVcsUUFPdEJDLFNBQVNmLEdBQ1osT0FBT3ZDLE1BQUswQyxFQUFRQyxJQUFJSixHQVdyQmdCLGNBQ0hoQixFQUNBaUIsRUFDQUMsRUFDQUMsRUFDQUMsRUFBWSxHQUNaLEdBQUkzRCxNQUFLQyxFQUdKLENBQ0VELE1BQUswQyxFQUFRa0IsSUFBSXJCLElBQ2hCWixRQUFRQyxLQUFLLGlDQUFrQ1cseUhBR25ELE1BQU1zQixFQUFjQyxFQUFtQk4sRUFBUUMsRUFBTUMsRUFBU0MsR0FDOUQzRCxNQUFLMEMsRUFBUXFCLElBQUl4QixFQUFXc0IsR0FDNUI3RCxNQUFLQyxFQUFLK0QsU0FBU0gsUUFUbkJsQyxRQUFRQyxLQUFLLHlEQXdCZHFDLHFCQUNIMUIsRUFDQWlCLEVBQ0FDLEVBQ0FTLEVBQ0FDLEVBQ0FDLEVBQ0FWLEVBQ0FDLEVBQVksR0FDWixHQUFJM0QsTUFBS0MsRUFHSixDQUNFRCxNQUFLMEMsRUFBUWtCLElBQUlyQixJQUNoQlosUUFBUUMsS0FBSyxpQ0FBa0NXLHlIQUduRCxNQUFNOEIsRUFBc0JDLEVBQTJCZCxFQUFRQyxFQUFNUyxFQUFVQyxFQUFhQyxFQUFjVixFQUFTQyxHQUNuSDNELE1BQUswQyxFQUFRcUIsSUFBSXhCLEVBQVc4QixHQUM1QnJFLE1BQUtDLEVBQUsrRCxTQUFTSyxRQVRuQjFDLFFBQVFDLEtBQUsseURBb0NkMkMsZ0JBQ0hoQyxFQUNBaUMsRUFDQUMsRUFDQWYsRUFDQUMsRUFBWSxHQUNaLEdBQUkzRCxNQUFLQyxFQVFMLEdBSkdELE1BQUswQyxFQUFRa0IsSUFBSXJCLElBQ2hCWixRQUFRQyxLQUFLLGlDQUFrQ1cseUhBRzVCLGlCQUFiaUMsRUFBdUIsQ0FDN0IsTUFBTUUsRUFBYUMsRUFBOEJILEVBQVVDLEdBQzNEekUsTUFBSzBDLEVBQVFxQixJQUFJeEIsRUFBV21DLEdBQzVCMUUsTUFBS0MsRUFBSytELFNBQVNVLE9BRWxCLENBQ0QsTUFBTUUsRUFBYUMsRUFBZ0NMLEVBQVVDLEVBQU9mLEdBQ3BFMUQsTUFBSzBDLEVBQVFxQixJQUFJeEIsRUFBV3FDLEdBQzVCNUUsTUFBS0MsRUFBSytELFNBQVNZLFFBZnZCakQsUUFBUUMsS0FBSyx5REEyQmRrRCxpQkFDSHZDLEVBQ0F3QyxFQUNBTixFQUNBZixHQUVBLEdBQUkxRCxNQUFLQyxFQUdKLENBQ0VELE1BQUswQyxFQUFRa0IsSUFBSXJCLElBQ2hCWixRQUFRQyxLQUFLLGlDQUFrQ1cseUhBR25ELE1BQU15QyxFQUFpQkMsRUFBc0JGLEVBQVdOLEVBQU9mLEdBQy9EMUQsTUFBSzBDLEVBQVFxQixJQUFJeEIsRUFBV3lDLEdBQzVCaEYsTUFBS0MsRUFBSytELFNBQVNnQixRQVRuQnJELFFBQVFDLEtBQUsseURBaUJkc0QsWUFBWTNDLFFBQ0U0QyxJQUFkNUMsR0FDQ3ZDLE1BQUswQyxFQUFRMEMsU0FBU0MsSUFDbEJBLEVBQVN4RCxhQUViN0IsTUFBSzBDLEVBQVF0QixVQUdicEIsTUFBSzBDLEVBQVFDLElBQUlKLElBQVlWLFVBQzdCN0IsTUFBSzBDLEVBQVE0QyxPQUFPL0MsSUFVNUJnRCxHQUFtQixJQUFJbkMsSUFJbkJtQyxzQkFDQSxNQUFPLElBQUt2RixNQUFLdUYsRUFBaUJsQyxRQVl0Q21DLGFBQ0lqRCxFQUNBa0QsRUFDQUMsRUFLQUMsRUFBbUIsSUFDbkJsQixFQUlBbUIsR0FDQSxHQUFJNUYsTUFBS0MsRUFHSixDQUNFRCxNQUFLdUYsRUFBaUIzQixJQUFJckIsSUFDekJaLFFBQVFDLEtBQUssaUNBQWtDVyx5SEFHbkQsTUFBTXNELEVBQXVCLElBQUlDLEVBQW9COUYsTUFBS0MsRUFBTXdGLEVBQU1DLEVBQU9DLEVBQVVsQixFQUFPbUIsR0FDOUY1RixNQUFLdUYsRUFBaUJ4QixJQUFJeEIsRUFBV3NELFFBUnJDbEUsUUFBUUMsS0FBSyx5REFrQnJCbUUsYUFBYXhELEdBQ1QsT0FBT3ZDLE1BQUt1RixFQUFpQjVDLElBQUlKLElBQWMsS0FPbkR5RCxnQkFBZ0J6RCxRQUNLNEMsSUFBZDVDLEdBQ0N2QyxNQUFLdUYsRUFBaUJILFNBQVNhLElBQzNCQSxFQUFXcEUsYUFFZjdCLE1BQUt1RixFQUFpQm5FLFVBR3RCcEIsTUFBS3VGLEVBQWlCNUMsSUFBSUosSUFBWVYsVUFDdEM3QixNQUFLdUYsRUFBaUJELE9BQU8vQyxJQVVyQzJELEdBQWlCLElBQUk5QyxJQUlqQjhDLG9CQUNBLE1BQU8sSUFBS2xHLE1BQUtrRyxFQUFlN0MsUUFVcEM4QyxTQUNJNUQsRUFDQWhCLEVBQ0E2RSxFQUNBQyxHQUVBLEdBQUlyRyxNQUFLQyxFQUdKLENBQ0VELE1BQUtrRyxFQUFldEMsSUFBSXJCLElBQ3ZCWixRQUFRQyxLQUFLLGlDQUFrQ1cseUhBR25ELE1BQU0rRCxFQUFtQixJQUFJQyxFQUFnQmhGLEVBQUl2QixNQUFLQyxFQUFNbUcsRUFBUUMsR0FDcEVyRyxNQUFLa0csRUFBZW5DLElBQUl4QixFQUFXK0QsUUFSbkMzRSxRQUFRQyxLQUFLLHlEQWtCckI0RSxTQUFTakUsR0FDTCxPQUFPdkMsTUFBS2tHLEVBQWV2RCxJQUFJSixJQUFjLEtBT2pEa0UsWUFBWWxFLFFBQ1M0QyxJQUFkNUMsR0FDQ3ZDLE1BQUtrRyxFQUFlZCxTQUFTYSxJQUN6QkEsRUFBV3BFLGFBRWY3QixNQUFLa0csRUFBZTlFLFVBR3BCcEIsTUFBS2tHLEVBQWV2RCxJQUFJSixJQUFZVixVQUNwQzdCLE1BQUtrRyxFQUFlWixPQUFPL0MsSUFZNUJtRSxVQUNIQyxFQUNBaEIsRUFBbUIsTUFDbkIzRixNQUFLQyxHQUFNZ0MsVUFBVTJFLFFBQVEsQ0FBRUQsU0FBUWhCLGFBUzNDa0IsVUFDSTdHLEtBQUtrRixjQUNMbEYsS0FBS2dHLGtCQU1UbkUsVUFDSTdCLEtBQUs2RyxVQUVMN0csTUFBS0MsR0FBTTRCLFVBQ1g3QixNQUFLQyxFQUFPLEtBQ1pELE1BQUtELEVBQU8ifQ==
